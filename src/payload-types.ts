/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    home: Home;
    about: About;
    contact: Contact;
    'custom-pages': CustomPage;
    services: Service;
    testimonials: Testimonial;
    faqs: Faq;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    home: HomeSelect<false> | HomeSelect<true>;
    about: AboutSelect<false> | AboutSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    'custom-pages': CustomPagesSelect<false> | CustomPagesSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    faqs: FaqsSelect<false> | FaqsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  description?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: number;
  title: string;
  hero: {
    heading: string;
    tagline: string;
    heroImage?: (number | null) | Media;
    styling?: {
      headingSize?:
        | (
            | 'text-4xl md:text-5xl lg:text-6xl'
            | 'text-5xl md:text-6xl lg:text-7xl'
            | 'text-6xl md:text-7xl lg:text-8xl'
            | 'text-7xl md:text-8xl lg:text-9xl'
          )
        | null;
      headingWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
      taglineSize?: ('text-base md:text-lg' | 'text-lg md:text-xl' | 'text-xl md:text-2xl') | null;
      spacing?: ('py-12' | 'py-20' | 'py-32') | null;
    };
  };
  whoWeServe?:
    | {
        title: string;
        image: number | Media;
        description: string;
        id?: string | null;
      }[]
    | null;
  whoWeServeStyling?: {
    titleSize?: ('text-2xl' | 'text-3xl' | 'text-4xl') | null;
    titleWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
    descriptionSize?: ('text-xs' | 'text-sm' | 'text-base') | null;
    cardPadding?: ('p-6' | 'p-8' | 'p-10') | null;
    spacing?: ('py-12' | 'py-20' | 'py-32') | null;
  };
  services?:
    | {
        title: string;
        description: string;
        hoverColor: '#95997D' | '#62708A' | '#C48457';
        id?: string | null;
      }[]
    | null;
  servicesStyling?: {
    titleSize?: ('text-2xl' | 'text-3xl' | 'text-4xl') | null;
    descriptionSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
    cardPadding?: ('p-8' | 'p-12' | 'p-16') | null;
    enableAnimation?: boolean | null;
  };
  about: {
    heading: string;
    description1: string;
    description2: string;
    categories?:
      | {
          title: string;
          description: string;
          id?: string | null;
        }[]
      | null;
  };
  aboutStyling?: {
    headingSize?: ('text-3xl md:text-4xl' | 'text-4xl md:text-5xl' | 'text-5xl md:text-6xl') | null;
    headingWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
    descriptionSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
    categoryTitleSize?: ('text-lg' | 'text-xl' | 'text-2xl') | null;
    spacing?: ('py-12' | 'py-20' | 'py-32') | null;
  };
  team?:
    | {
        name: string;
        credentials?: string | null;
        title: string;
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  teamStyling?: {
    nameSize?: ('text-lg' | 'text-xl' | 'text-2xl') | null;
    nameWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
    titleSize?: ('text-xs' | 'text-sm' | 'text-base') | null;
    cardPadding?: ('p-4' | 'p-6' | 'p-8') | null;
    spacing?: ('py-12' | 'py-20' | 'py-32') | null;
  };
  pricing?:
    | {
        title: string;
        subtitle?: string | null;
        description: string;
        color: '#95997D' | '#62708A' | '#C48457';
        tiers?:
          | {
              name: string;
              description: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  pricingStyling?: {
    titleSize?: ('text-xl' | 'text-2xl' | 'text-3xl') | null;
    titleWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
    descriptionSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
    tierNameSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
    cardPadding?: ('p-6' | 'p-8' | 'p-10') | null;
    spacing?: ('py-12' | 'py-20' | 'py-32') | null;
  };
  contact: {
    heading: string;
    description: string;
  };
  contactStyling?: {
    headingSize?: ('text-3xl md:text-4xl' | 'text-4xl md:text-5xl' | 'text-5xl md:text-6xl') | null;
    headingWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
    descriptionSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
    inputPadding?: ('px-4 py-3' | 'px-6 py-4' | 'px-8 py-5') | null;
    spacing?: ('py-12' | 'py-20' | 'py-32') | null;
  };
  /**
   * Drag to reorder sections. Uncheck to hide sections.
   */
  sectionOrder?:
    | {
        section: 'hero' | 'whoWeServe' | 'services' | 'about' | 'team' | 'pricing' | 'contact';
        enabled?: boolean | null;
        customTitle?: string | null;
        id?: string | null;
      }[]
    | null;
  layoutSettings?: {
    teamLayout?: ('grid-2x2' | 'grid-3col' | 'grid-4col' | 'list') | null;
    servicesLayout?: ('cards' | 'list-borders' | 'list-simple') | null;
    heroLayout?: ('centered' | 'left' | 'split-form') | null;
    showConsultationSection?: boolean | null;
    consultationPlacement?: ('after-hero' | 'before-footer' | 'in-hero') | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage the About page content with easy section-based editing
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: number;
  title: string;
  hero: {
    /**
     * Main heading for the about page
     */
    heading: string;
    /**
     * Subheading or tagline
     */
    subheading?: string | null;
    heroImage?: (number | null) | Media;
    styling?: {
      headingSize?:
        | ('text-4xl md:text-5xl' | 'text-5xl md:text-6xl lg:text-7xl' | 'text-6xl md:text-7xl lg:text-8xl')
        | null;
      headingWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
      subheadingSize?: ('text-base' | 'text-lg md:text-xl' | 'text-xl md:text-2xl') | null;
      spacing?: ('py-12' | 'py-20' | 'py-32') | null;
    };
  };
  mainStory: {
    /**
     * Section heading
     */
    heading?: string | null;
    /**
     * Your main bio/story content
     */
    content: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    image?: (number | null) | Media;
    imagePosition?: ('left' | 'right' | 'top' | 'bottom') | null;
    /**
     * Add multiple images for a carousel display on the right side
     */
    carouselImages?:
      | {
          image: number | Media;
          id?: string | null;
        }[]
      | null;
    styling?: {
      headingSize?: ('text-3xl md:text-4xl' | 'text-4xl md:text-5xl' | 'text-5xl md:text-6xl') | null;
      headingWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
      contentSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
      backgroundColor?: ('bg-white' | 'bg-gray-50' | 'bg-[#A1B5B8]/10' | 'bg-[#E3D3BD]/20') | null;
      spacing?: ('py-12' | 'py-20' | 'py-32') | null;
    };
  };
  education: {
    /**
     * Section heading
     */
    heading?: string | null;
    /**
     * Educational background and professional experience
     */
    content: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    styling?: {
      headingSize?: ('text-2xl md:text-3xl' | 'text-3xl md:text-4xl' | 'text-4xl md:text-5xl') | null;
      headingWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
      contentSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
      backgroundColor?: ('bg-white' | 'bg-gray-50' | 'bg-[#A1B5B8]/10' | 'bg-[#E3D3BD]/20') | null;
      spacing?: ('py-12' | 'py-20' | 'py-32') | null;
    };
  };
  showTeam?: boolean | null;
  /**
   * Section heading for team members
   */
  teamHeading?: string | null;
  /**
   * Optional description above team members
   */
  teamSubheading?: string | null;
  /**
   * Add team members like Brooks, Nolan, and Joe
   */
  teamMembers?:
    | {
        name: string;
        credentials?: string | null;
        title: string;
        /**
         * Team member biography
         */
        bio?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        image: number | Media;
        email?: string | null;
        phone?: string | null;
        linkedIn?: string | null;
        id?: string | null;
      }[]
    | null;
  teamStyling?: {
    layout?: ('grid-2' | 'grid-3' | 'grid-4' | 'stacked' | 'horizontal') | null;
    headingSize?: ('text-3xl md:text-4xl' | 'text-4xl md:text-5xl' | 'text-5xl md:text-6xl') | null;
    nameSize?: ('text-lg' | 'text-xl' | 'text-2xl') | null;
    nameWeight?: ('font-normal' | 'font-medium' | 'font-semibold') | null;
    titleSize?: ('text-xs' | 'text-sm' | 'text-base') | null;
    bioSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
    cardPadding?: ('p-6' | 'p-8' | 'p-10') | null;
    backgroundColor?: ('bg-white' | 'bg-gray-50' | 'bg-[#A1B5B8]/10' | 'bg-[#E3D3BD]/20') | null;
    spacing?: ('py-12' | 'py-20' | 'py-32') | null;
  };
  contactInfo?: {
    showContactInfo?: boolean | null;
    heading?: string | null;
    email?: string | null;
    phone?: string | null;
    officeAddress?: string | null;
    styling?: {
      backgroundColor?: ('bg-white' | 'bg-gray-50' | 'bg-[#A1B5B8]/10' | 'bg-[#E3D3BD]/20' | 'bg-[#2C3E51]') | null;
      spacing?: ('py-12' | 'py-20' | 'py-32') | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage the Contact page content
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: number;
  title: string;
  /**
   * Main heading for the contact page
   */
  heroHeading: string;
  /**
   * Optional subheading text
   */
  heroSubheading?: string | null;
  heroImage?: (number | null) | Media;
  showContactInfo?: boolean | null;
  /**
   * Heading above contact methods
   */
  contactHeading?: string | null;
  phone?: string | null;
  email?: string | null;
  officeAddress?: string | null;
  showBooking?: boolean | null;
  /**
   * Heading for booking section
   */
  bookingHeading?: string | null;
  /**
   * Optional description text above the form
   */
  bookingDescription?: string | null;
  /**
   * Submit button text
   */
  buttonText?: string | null;
  /**
   * Message shown after successful submission
   */
  successMessage?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Create custom pages using drag-and-drop components. Build professional pages without coding!
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-pages".
 */
export interface CustomPage {
  id: number;
  /**
   * 🏷️ The main title of your page. This appears in the browser tab and as the page heading.
   */
  title: string;
  /**
   * 🔗 URL path for this page (e.g., "about-us" becomes /custom/about-us). Use lowercase and hyphens only.
   */
  slug: string;
  /**
   * 🎯 Build your page section by section! Drag sections to reorder them. Each section is like a building block for your page.
   */
  sections?:
    | {
        /**
         * Choose the type of content section. Each type has different layout and content options.
         */
        blockType:
          | 'hero'
          | 'services'
          | 'team'
          | 'about'
          | 'consultation'
          | 'richText'
          | 'cta'
          | 'stats'
          | 'imageGallery'
          | 'testimonials'
          | 'faq'
          | 'contactInfo'
          | 'spacer';
        /**
         * ⚙️ Customize how this section looks and feels. All settings are optional - use what you need!
         */
        sectionSettings?: {
          /**
           * 💡 Override the default section title. Great for adding custom headings like "Why Choose Us?" or "Our Process"
           */
          sectionTitle?: string | null;
          /**
           * 🎨 Choose a background color that matches your brand. Alternating colors creates visual variety.
           */
          backgroundColor?:
            | ('bg-white' | 'bg-[#E3D3BD]/20' | 'bg-[#A1B5B8]/10' | 'bg-[#85896D]/10' | 'bg-[#2C3E51]' | 'bg-gray-50')
            | null;
          /**
           * 📐 Control the vertical spacing above and below your section. Medium works well for most sections.
           */
          padding?: ('py-12' | 'py-20' | 'py-32' | 'py-0') | null;
          /**
           * ✏️ Choose text color to match your brand. Use white for dark backgrounds.
           */
          textColor?: ('text-[#2C3E51]' | 'text-[#62708A]' | 'text-[#95997D]' | 'text-white' | 'text-gray-900') | null;
          /**
           * 📏 Control the size of section headings
           */
          headingSize?:
            | ('text-3xl md:text-4xl' | 'text-4xl md:text-5xl' | 'text-5xl md:text-6xl' | 'text-6xl md:text-7xl')
            | null;
          /**
           * 💪 Set heading font weight
           */
          headingWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold' | 'font-bold') | null;
          /**
           * 📝 Control body text size
           */
          bodyTextSize?: ('text-sm' | 'text-base' | 'text-lg' | 'text-xl') | null;
          /**
           * 🎯 Choose accent color for buttons, borders, and highlights.
           */
          accentColor?: ('#62708A' | '#85896D' | '#A1B5B8' | '#95997D' | '#2C3E51') | null;
          /**
           * 🎯 How should your content be arranged? Works great for team members, services, testimonials, and galleries.
           */
          layout?: ('single' | 'two-col' | 'three-col' | 'four-col' | 'grid-2x2' | 'list') | null;
          /**
           * 📝 Main title for this section. Make it clear and compelling!
           */
          heading?: string | null;
          /**
           * 📄 Optional subtitle that appears below the main heading. Great for explanations or taglines.
           */
          subheading?: string | null;
          /**
           * ✏️ Rich text editor for detailed content. You can add formatting, links, lists, and more!
           */
          content?: {
            root: {
              type: string;
              children: {
                type: any;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          /**
           * 🖼️ Upload an image for this section. Works well for hero sections, about sections, and image galleries.
           */
          image?: (number | null) | Media;
          /**
           * 🔘 Text that appears on buttons. Keep it action-oriented!
           */
          ctaText?: string | null;
          /**
           * 🔗 Where should the button go? Use URLs like "/contact" or "https://example.com" or "#section-id"
           */
          ctaLink?: string | null;
          /**
           * ⬜ Create visual breathing room between sections. Use spacers to separate different topics or create dramatic pauses.
           */
          spacerHeight?: ('h-12' | 'h-24' | 'h-48') | null;
          /**
           * ✨ Add subtle animations on hover for interactive elements
           */
          enableAnimation?: boolean | null;
          /**
           * 🌑 Control shadow depth for cards and elevated elements
           */
          shadowIntensity?: ('shadow-none' | 'shadow-md' | 'shadow-lg' | 'shadow-2xl') | null;
          /**
           * ⬛ Set corner roundness for cards and buttons
           */
          borderRadius?: ('rounded-none' | 'rounded-sm' | 'rounded-md' | 'rounded-lg' | 'rounded-xl') | null;
          /**
           * 💬 Select specific testimonials to show, or leave empty to show all testimonials
           */
          testimonialsToShow?: (number | Testimonial)[] | null;
          /**
           * ❓ Select specific FAQs to show, or leave empty to show all FAQs
           */
          faqsToShow?: (number | Faq)[] | null;
          /**
           * 📂 Show only FAQs from a specific category
           */
          faqCategory?:
            | ('all' | 'general' | 'services' | 'pricing' | 'process' | 'investment' | 'retirement' | 'insurance')
            | null;
          /**
           * 🖼️ Select images for the gallery section
           */
          galleryImages?: (number | Media)[] | null;
          /**
           * 🏷️ Display captions below images in the gallery
           */
          showCaptions?: boolean | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage client testimonials that can be used in the page builder and throughout the site.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  /**
   * 💬 The testimonial text from your client. Keep it authentic and specific!
   */
  quote: string;
  /**
   * 👤 Client name (first name and last initial works well for privacy)
   */
  author: string;
  /**
   * 💼 Client title or profession (optional but adds credibility)
   */
  position?: string | null;
  /**
   * ⭐ Star rating out of 5
   */
  rating?: number | null;
  /**
   * ⭐ Mark as featured to highlight this testimonial
   */
  featured?: boolean | null;
  /**
   * 📸 Optional client photo (with permission). Generic avatar images work too.
   */
  photo?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage frequently asked questions that can be used in the page builder and throughout the site.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface Faq {
  id: number;
  /**
   * ❓ The question your clients commonly ask
   */
  question: string;
  /**
   * 💡 Detailed answer to the question. You can use formatting, links, and lists.
   */
  answer: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * 📂 Categorize questions to organize them better
   */
  category?: ('general' | 'services' | 'pricing' | 'process' | 'investment' | 'retirement' | 'insurance') | null;
  /**
   * ⭐ Mark as featured to show this FAQ prominently
   */
  featured?: boolean | null;
  /**
   * 🔢 Order for displaying (0 = first, higher numbers appear later)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage the Services page content with easy section-based editing
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  title: string;
  hero: {
    /**
     * Main heading for the services page
     */
    heading: string;
    /**
     * Introductory paragraph explaining your services approach
     */
    description: string;
    heroImage?: (number | null) | Media;
    styling?: {
      headingSize?:
        | ('text-4xl md:text-5xl' | 'text-5xl md:text-6xl lg:text-7xl' | 'text-6xl md:text-7xl lg:text-8xl')
        | null;
      headingWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
      descriptionSize?: ('text-base' | 'text-lg md:text-xl' | 'text-xl md:text-2xl') | null;
      spacing?: ('py-12' | 'py-20' | 'py-32') | null;
    };
  };
  /**
   * Primary action buttons displayed below the hero description
   */
  ctaButtons?:
    | {
        text: string;
        link: string;
        style?: ('primary' | 'secondary' | 'tertiary') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Your main service offerings (e.g., One-Time Planning, Ongoing Planning, etc.)
   */
  serviceOfferings?:
    | {
        title: string;
        /**
         * Optional badge text (e.g., "Most Popular", "Best Value")
         */
        badge?: string | null;
        /**
         * Short description of who this is best for
         */
        tagline?: string | null;
        /**
         * Detailed description of what's included, pricing, etc.
         */
        description: string;
        features?:
          | {
              feature?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Button text for this service
         */
        ctaText?: string | null;
        /**
         * Link for the service button
         */
        ctaLink?: string | null;
        accentColor?: ('#62708A' | '#85896D' | '#A1B5B8' | '#95997D' | '#C48457') | null;
        cardStyling?: {
          titleSize?: ('text-2xl' | 'text-3xl' | 'text-4xl') | null;
          titleWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
          descriptionSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
          cardPadding?: ('p-6' | 'p-10' | 'p-12') | null;
          shadowIntensity?: ('shadow-none' | 'shadow-md' | 'shadow-lg' | 'shadow-2xl') | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Other services like accounting, tax prep, etc.
   */
  additionalServices?:
    | {
        title: string;
        description: string;
        features?:
          | {
              item?: string | null;
              id?: string | null;
            }[]
          | null;
        ctaText?: string | null;
        ctaLink?: string | null;
        backgroundColor?: ('bg-white' | 'bg-gray-50' | 'bg-[#A1B5B8]/10' | 'bg-[#E3D3BD]/20') | null;
        styling?: {
          titleSize?: ('text-3xl md:text-4xl' | 'text-4xl md:text-5xl' | 'text-5xl md:text-6xl') | null;
          titleWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
          descriptionSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
          spacing?: ('py-12' | 'py-20' | 'py-32') | null;
        };
        id?: string | null;
      }[]
    | null;
  showTestimonials?: boolean | null;
  testimonialsHeading?: string | null;
  /**
   * Select specific testimonials or leave empty to show all
   */
  selectedTestimonials?: (number | Testimonial)[] | null;
  testimonialsStyling?: {
    headingSize?: ('text-3xl md:text-4xl' | 'text-4xl md:text-5xl' | 'text-5xl md:text-6xl') | null;
    headingWeight?: ('font-light' | 'font-normal' | 'font-medium' | 'font-semibold') | null;
    quoteSize?: ('text-sm' | 'text-base' | 'text-lg') | null;
    cardPadding?: ('p-6' | 'p-8' | 'p-10') | null;
    spacing?: ('py-12' | 'py-20' | 'py-32') | null;
  };
  disclaimer?: {
    showDisclaimer?: boolean | null;
    /**
     * Legal disclaimer text to display at bottom of page
     */
    disclaimerText?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'home';
        value: number | Home;
      } | null)
    | ({
        relationTo: 'about';
        value: number | About;
      } | null)
    | ({
        relationTo: 'contact';
        value: number | Contact;
      } | null)
    | ({
        relationTo: 'custom-pages';
        value: number | CustomPage;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'faqs';
        value: number | Faq;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        heading?: T;
        tagline?: T;
        heroImage?: T;
        styling?:
          | T
          | {
              headingSize?: T;
              headingWeight?: T;
              taglineSize?: T;
              spacing?: T;
            };
      };
  whoWeServe?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        id?: T;
      };
  whoWeServeStyling?:
    | T
    | {
        titleSize?: T;
        titleWeight?: T;
        descriptionSize?: T;
        cardPadding?: T;
        spacing?: T;
      };
  services?:
    | T
    | {
        title?: T;
        description?: T;
        hoverColor?: T;
        id?: T;
      };
  servicesStyling?:
    | T
    | {
        titleSize?: T;
        descriptionSize?: T;
        cardPadding?: T;
        enableAnimation?: T;
      };
  about?:
    | T
    | {
        heading?: T;
        description1?: T;
        description2?: T;
        categories?:
          | T
          | {
              title?: T;
              description?: T;
              id?: T;
            };
      };
  aboutStyling?:
    | T
    | {
        headingSize?: T;
        headingWeight?: T;
        descriptionSize?: T;
        categoryTitleSize?: T;
        spacing?: T;
      };
  team?:
    | T
    | {
        name?: T;
        credentials?: T;
        title?: T;
        image?: T;
        id?: T;
      };
  teamStyling?:
    | T
    | {
        nameSize?: T;
        nameWeight?: T;
        titleSize?: T;
        cardPadding?: T;
        spacing?: T;
      };
  pricing?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        color?: T;
        tiers?:
          | T
          | {
              name?: T;
              description?: T;
              id?: T;
            };
        id?: T;
      };
  pricingStyling?:
    | T
    | {
        titleSize?: T;
        titleWeight?: T;
        descriptionSize?: T;
        tierNameSize?: T;
        cardPadding?: T;
        spacing?: T;
      };
  contact?:
    | T
    | {
        heading?: T;
        description?: T;
      };
  contactStyling?:
    | T
    | {
        headingSize?: T;
        headingWeight?: T;
        descriptionSize?: T;
        inputPadding?: T;
        spacing?: T;
      };
  sectionOrder?:
    | T
    | {
        section?: T;
        enabled?: T;
        customTitle?: T;
        id?: T;
      };
  layoutSettings?:
    | T
    | {
        teamLayout?: T;
        servicesLayout?: T;
        heroLayout?: T;
        showConsultationSection?: T;
        consultationPlacement?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about_select".
 */
export interface AboutSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        heading?: T;
        subheading?: T;
        heroImage?: T;
        styling?:
          | T
          | {
              headingSize?: T;
              headingWeight?: T;
              subheadingSize?: T;
              spacing?: T;
            };
      };
  mainStory?:
    | T
    | {
        heading?: T;
        content?: T;
        image?: T;
        imagePosition?: T;
        carouselImages?:
          | T
          | {
              image?: T;
              id?: T;
            };
        styling?:
          | T
          | {
              headingSize?: T;
              headingWeight?: T;
              contentSize?: T;
              backgroundColor?: T;
              spacing?: T;
            };
      };
  education?:
    | T
    | {
        heading?: T;
        content?: T;
        styling?:
          | T
          | {
              headingSize?: T;
              headingWeight?: T;
              contentSize?: T;
              backgroundColor?: T;
              spacing?: T;
            };
      };
  showTeam?: T;
  teamHeading?: T;
  teamSubheading?: T;
  teamMembers?:
    | T
    | {
        name?: T;
        credentials?: T;
        title?: T;
        bio?: T;
        image?: T;
        email?: T;
        phone?: T;
        linkedIn?: T;
        id?: T;
      };
  teamStyling?:
    | T
    | {
        layout?: T;
        headingSize?: T;
        nameSize?: T;
        nameWeight?: T;
        titleSize?: T;
        bioSize?: T;
        cardPadding?: T;
        backgroundColor?: T;
        spacing?: T;
      };
  contactInfo?:
    | T
    | {
        showContactInfo?: T;
        heading?: T;
        email?: T;
        phone?: T;
        officeAddress?: T;
        styling?:
          | T
          | {
              backgroundColor?: T;
              spacing?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  title?: T;
  heroHeading?: T;
  heroSubheading?: T;
  heroImage?: T;
  showContactInfo?: T;
  contactHeading?: T;
  phone?: T;
  email?: T;
  officeAddress?: T;
  showBooking?: T;
  bookingHeading?: T;
  bookingDescription?: T;
  buttonText?: T;
  successMessage?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-pages_select".
 */
export interface CustomPagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  sections?:
    | T
    | {
        blockType?: T;
        sectionSettings?:
          | T
          | {
              sectionTitle?: T;
              backgroundColor?: T;
              padding?: T;
              textColor?: T;
              headingSize?: T;
              headingWeight?: T;
              bodyTextSize?: T;
              accentColor?: T;
              layout?: T;
              heading?: T;
              subheading?: T;
              content?: T;
              image?: T;
              ctaText?: T;
              ctaLink?: T;
              spacerHeight?: T;
              enableAnimation?: T;
              shadowIntensity?: T;
              borderRadius?: T;
              testimonialsToShow?: T;
              faqsToShow?: T;
              faqCategory?: T;
              galleryImages?: T;
              showCaptions?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        heading?: T;
        description?: T;
        heroImage?: T;
        styling?:
          | T
          | {
              headingSize?: T;
              headingWeight?: T;
              descriptionSize?: T;
              spacing?: T;
            };
      };
  ctaButtons?:
    | T
    | {
        text?: T;
        link?: T;
        style?: T;
        id?: T;
      };
  serviceOfferings?:
    | T
    | {
        title?: T;
        badge?: T;
        tagline?: T;
        description?: T;
        features?:
          | T
          | {
              feature?: T;
              id?: T;
            };
        ctaText?: T;
        ctaLink?: T;
        accentColor?: T;
        cardStyling?:
          | T
          | {
              titleSize?: T;
              titleWeight?: T;
              descriptionSize?: T;
              cardPadding?: T;
              shadowIntensity?: T;
            };
        id?: T;
      };
  additionalServices?:
    | T
    | {
        title?: T;
        description?: T;
        features?:
          | T
          | {
              item?: T;
              id?: T;
            };
        ctaText?: T;
        ctaLink?: T;
        backgroundColor?: T;
        styling?:
          | T
          | {
              titleSize?: T;
              titleWeight?: T;
              descriptionSize?: T;
              spacing?: T;
            };
        id?: T;
      };
  showTestimonials?: T;
  testimonialsHeading?: T;
  selectedTestimonials?: T;
  testimonialsStyling?:
    | T
    | {
        headingSize?: T;
        headingWeight?: T;
        quoteSize?: T;
        cardPadding?: T;
        spacing?: T;
      };
  disclaimer?:
    | T
    | {
        showDisclaimer?: T;
        disclaimerText?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  quote?: T;
  author?: T;
  position?: T;
  rating?: T;
  featured?: T;
  photo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs_select".
 */
export interface FaqsSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  category?: T;
  featured?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}